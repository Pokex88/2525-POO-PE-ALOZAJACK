import json

class Producto:
    def __init__(self, id_producto, nombre, cantidad, precio):
        self.id_producto = id_producto
        self.nombre = nombre
        self.cantidad = cantidad
        self.precio = precio

    def __str__(self):
        return f"ID: {self.id_producto} | Nombre: {self.nombre} | Cantidad: {self.cantidad} | Precio: ${self.precio:.2f}"

    def to_dict(self):
        return {
            "id_producto": self.id_producto,
            "nombre": self.nombre,
            "cantidad": self.cantidad,
            "precio": self.precio
        }

class Inventario:
    def __init__(self):
        self.productos = {}  # Diccionario con clave = ID producto

    def agregar_producto(self, producto):
        if producto.id_producto in self.productos:
            print("El producto con este ID ya existe.")
        else:
            self.productos[producto.id_producto] = producto
            print("Producto agregado con éxito.")

    def eliminar_producto(self, id_producto):
        if id_producto in self.productos:
            del self.productos[id_producto]
            print("Producto eliminado.")
        else:
            print("No se encontró un producto con ese ID.")

    def actualizar_producto(self, id_producto, cantidad=None, precio=None):
        if id_producto in self.productos:
            if cantidad is not None:
                self.productos[id_producto].cantidad = cantidad
            if precio is not None:
                self.productos[id_producto].precio = precio
            print("Producto actualizado.")
        else:
            print("No se encontró un producto con ese ID.")

    def buscar_por_nombre(self, nombre):
        encontrados = [p for p in self.productos.values() if p.nombre.lower() == nombre.lower()]
        if encontrados:
            for p in encontrados:
                print(p)
        else:
            print("No se encontraron productos con ese nombre.")

    def mostrar_todos(self):
        if self.productos:
            for producto in self.productos.values():
                print(producto)
        else:
            print("El inventario está vacío.")

    def guardar_en_archivo(self, archivo="inventario.json"):
        with open(archivo, "w") as f:
            json.dump({id: p.to_dict() for id, p in self.productos.items()}, f, indent=4)
        print("Inventario guardado en archivo.")

    def cargar_desde_archivo(self, archivo="inventario.json"):
        try:
            with open(archivo, "r") as f:
                data = json.load(f)
                self.productos = {id: Producto(**p) for id, p in data.items()}
            print("Inventario cargado desde archivo.")
        except FileNotFoundError:
            print("No se encontró archivo de inventario, iniciando vacío.")


def menu():
    inventario = Inventario()
    inventario.cargar_desde_archivo()

    while True:
        print("""
        \n===== MENÚ INVENTARIO =====
        1. Agregar producto
        2. Eliminar producto
        3. Actualizar producto
        4. Buscar producto por nombre
        5. Mostrar todos los productos
        6. Guardar inventario en archivo
        7. Salir
        =========================
        """)
        opcion = input("Seleccione una opción: ")

        if opcion == "1":
            id_p = input("ID: ")
            nombre = input("Nombre: ")
            cantidad = int(input("Cantidad: "))
            precio = float(input("Precio: "))
            producto = Producto(id_p, nombre, cantidad, precio)
            inventario.agregar_producto(producto)

        elif opcion == "2":
            id_p = input("Ingrese el ID a eliminar: ")
            inventario.eliminar_producto(id_p)

        elif opcion == "3":
            id_p = input("Ingrese el ID a actualizar: ")
            cantidad = input("Nueva cantidad (enter para no cambiar): ")
            precio = input("Nuevo precio (enter para no cambiar): ")
            inventario.actualizar_producto(
                id_p,
                cantidad=int(cantidad) if cantidad else None,
                precio=float(precio) if precio else None
            )

        elif opcion == "4":
            nombre = input("Ingrese el nombre del producto: ")
            inventario.buscar_por_nombre(nombre)

        elif opcion == "5":
            inventario.mostrar_todos()

        elif opcion == "6":
            inventario.guardar_en_archivo()

        elif opcion == "7":
            inventario.guardar_en_archivo()
            print("Saliendo...")
            break

        else:
            print("Opción inválida.")


if __name__ == "__main__":
    menu()
